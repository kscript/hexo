<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>云端笔记</title>
  
  <subtitle>杂七杂八的前端之旅</subtitle>
  <link href="/hexo/atom.xml" rel="self"/>
  
  <link href="https://kscript.gitee.io/"/>
  <updated>2018-12-29T03:33:06.597Z</updated>
  <id>https://kscript.gitee.io/</id>
  
  <author>
    <name>路人</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>thinkPHP5搭建api服务器</title>
    <link href="https://kscript.gitee.io/20181229/thinkPHP5%E6%90%AD%E5%BB%BAapi%E6%9C%8D%E5%8A%A1%E5%99%A8.html"/>
    <id>https://kscript.gitee.io/20181229/thinkPHP5搭建api服务器.html</id>
    <published>2018-12-29T03:29:56.000Z</published>
    <updated>2018-12-29T03:33:06.597Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="php" scheme="https://kscript.gitee.io/categories/php/"/>
    
    
      <category term="tp" scheme="https://kscript.gitee.io/tags/tp/"/>
    
      <category term="php" scheme="https://kscript.gitee.io/tags/php/"/>
    
      <category term="后端" scheme="https://kscript.gitee.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端学习笔记之JavaScript数组</title>
    <link href="https://kscript.gitee.io/20181228/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8BJavaScript%E6%95%B0%E7%BB%84.html"/>
    <id>https://kscript.gitee.io/20181228/前端学习笔记之JavaScript数组.html</id>
    <published>2018-12-28T10:19:41.000Z</published>
    <updated>2018-12-29T01:40:35.658Z</updated>
    
    <content type="html"><![CDATA[<p>我们在写代码的时候，经常会对数组进行操作。比如说我自己吧，写2D小游戏时，会将一个二维数组作为游戏地图来用。那么在js中有哪些技巧呢，下面就列举一些经常会用到的。<br><a id="more"></a><br>1、length（操作原数组）<br>  众所周知，数组有着一个默认的长度属性。我们可以通过设置长度值的方式删除超过它的数组成员，这在一些特定环境里还是比较有用的。</p><p>2、pop、shift、splice（操作原数组）<br>  pop、shift分别用于删除数组的第一个和最后一个成员。需要注意的是，它们返回的是被删掉的成员，有时候我们一不注意将其赋给原有的数组或者是其它变量之类的，经常感觉到莫明其妙。因为在我们的逻辑中，它们返回的是修改后的数组(如replace)，其实不然。这是考虑到我们虽然删除了该成员，但是还需要通过它的值来do something，仔细想想这样才是更合理的。<br>  除了以上两种删除数组的办法外，js中还提供了一个比较自由的方法，那就是splice。<br>  为什么要这样说呢，因为splice不仅可以删除任意位置任意长度的元素，还可以插入新元素!如果没有这个方法，那么插入会是很让人头疼的一件事，想像一下过程吧。</p><p>3、join ? split（字符串方法）（操作原数组）<br>  这也是编程中常见的对立的方法，前者用于把数组转为字符串，后者则是把字符串拆分为数组。两者可以说是最常用的数组方法，我们可以用来做很多事情，比如说拼字符串，截取字符串等等。</p><p>4、sort（操作原数组）<br>  js中提供的数组的排序方法，虽然我们需要了解各种的数组排序算法，但开发过程中sort基本上就可以满足需求。sort常见的两种形式，Array.sort()以及Array.sort(function(a,b){return a&gt;b;}),后一种用于应对较为复杂的排序，如字符串和数值的比较。。</p><p>6、push，unshift，reverse（操作原数组）<br>  类似于pop、shift，自行举一反三!  reverse用于颠倒数组元素的顺序。</p><p>7、concat，slice（创建新数组）<br>  concat连接两个数组，slice读取数组的一部分，这两个比较常见的用法是与call，apply的结合使用。<br>数组降维：[].concat.apply([],ary) 类数组转数组 [].slice.call(arguments);<br>  另外，我们可以使用ary.concat([])或者ary.slice(0)来创建新的数组。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们在写代码的时候，经常会对数组进行操作。比如说我自己吧，写2D小游戏时，会将一个二维数组作为游戏地图来用。那么在js中有哪些技巧呢，下面就列举一些经常会用到的。&lt;br&gt;
    
    </summary>
    
      <category term="js" scheme="https://kscript.gitee.io/categories/js/"/>
    
    
      <category term="js" scheme="https://kscript.gitee.io/tags/js/"/>
    
      <category term="数组" scheme="https://kscript.gitee.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>前端资源导航</title>
    <link href="https://kscript.gitee.io/20181227/%E5%89%8D%E7%AB%AF%E8%B5%84%E6%BA%90%E5%AF%BC%E8%88%AA.html"/>
    <id>https://kscript.gitee.io/20181227/前端资源导航.html</id>
    <published>2018-12-27T01:05:31.000Z</published>
    <updated>2018-12-29T01:40:51.159Z</updated>
    
    <content type="html"><![CDATA[<p>整理了一些前端相关的资源, 包括前端框架、打包工具、技术手册、技术博客、问答社区、在线调试等<br><a id="more"></a></p><h5 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h5><p>Vue: <a href="https://cn.vuejs.org" target="_blank" rel="noopener">en</a> | <a href="https://cn.vuejs.org" target="_blank" rel="noopener">zh</a><br><a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener">Vue CLI 3</a><br><a href="http://hcysun.me/vue-design/art/" target="_blank" rel="noopener">Vue技术内幕</a><br><a href="http://element-cn.eleme.io/#/zh-CN/component" target="_blank" rel="noopener">Element-ui</a></p><h5 id="React"><a href="#React" class="headerlink" title="React"></a>React</h5><p>React: <a href="https://reactjs.org/" target="_blank" rel="noopener">en</a> | <a href="https://react.docschina.org/" target="_blank" rel="noopener">zh</a><br>react-native: <a href="https://facebook.github.io/react-native/" target="_blank" rel="noopener">en</a> | <a href="https://reactnative.cn/" target="_blank" rel="noopener">zh</a><br><a href="https://discuss.reactjs.org/" target="_blank" rel="noopener">discuss</a><br><a href="http://react-china.org/" target="_blank" rel="noopener">react中文</a>  </p><h5 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h5><p><a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a><br><a href="https://npm.taobao.org/" target="_blank" rel="noopener">cnpm</a><br><a href="https://www.yarnpkg.com/zh-Hans/" target="_blank" rel="noopener">yarn</a>  </p><h5 id="打包工具"><a href="#打包工具" class="headerlink" title="打包工具"></a>打包工具</h5><p>Webpack: <a href="https://webpack.js.org/" target="_blank" rel="noopener">en</a> | <a href="https://www.webpackjs.com/concepts/" target="_blank" rel="noopener">zh</a><br>Glup: <a href="https://gulpjs.com/" target="_blank" rel="noopener">en</a> | <a href="https://www.gulpjs.com.cn/" target="_blank" rel="noopener">zh</a><br>RequireJS: <a href="https://requirejs.org/" target="_blank" rel="noopener">en</a> | <a href="http://www.requirejs.cn" target="_blank" rel="noopener">zh</a></p><h5 id="问答社区"><a href="#问答社区" class="headerlink" title="问答社区"></a>问答社区</h5><p><a href="https://stackoverflow.com/" target="_blank" rel="noopener">stackoverflow</a><br><a href="https://segmentfault.com/" target="_blank" rel="noopener">思否</a><br><a href="https://www.zhihu.com" target="_blank" rel="noopener">知乎</a>  </p><h5 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h5><p><a href="https://github.com" target="_blank" rel="noopener">github</a><br><a href="https://gitlab.com" target="_blank" rel="noopener">gitlab</a><br><a href="https://gitee.com" target="_blank" rel="noopener">码云</a>  </p><h5 id="技术社区-博客"><a href="#技术社区-博客" class="headerlink" title="技术社区/博客"></a>技术社区/博客</h5><p><a href="https://juejin.im/timeline" target="_blank" rel="noopener">掘金</a><br><a href="https://www.csdn.net/" target="_blank" rel="noopener">CSDN</a><br><a href="https://jianshu.com/" target="_blank" rel="noopener">简书</a><br><a href="https://www.cnblogs.com/" target="_blank" rel="noopener">博客园</a><br><a href="https://www.oschina.net/" target="_blank" rel="noopener">开源中国</a><br><a href="http://www.html-js.com/" target="_blank" rel="noopener">前端乱炖</a><br><a href="https://www.css88.com/" target="_blank" rel="noopener">WEB前端开发</a><br><a href="https://www.v2ex.com/" target="_blank" rel="noopener">V2EX</a><br><a href="https://div.io/" target="_blank" rel="noopener">div.io</a><br><a href="http://www.itpub.net" target="_blank" rel="noopener">ITPUB</a>  </p><p><a href="https://www.zhangxinxu.com/" target="_blank" rel="noopener">张鑫旭</a><br><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">阮一峰</a><br><a href="https://www.w3cplus.com/" target="_blank" rel="noopener">W3CPlus</a>  </p><h5 id="技术手册"><a href="#技术手册" class="headerlink" title="技术手册"></a>技术手册</h5><p>W3C: <a href="https://www.w3.org/" target="_blank" rel="noopener">en</a> | <a href="http://www.chinaw3c.org/" target="_blank" rel="noopener">zh</a><br>MDN: <a href="https://developer.mozilla.org" target="_blank" rel="noopener">en</a> | <a href="https://developer.mozilla.org/zh-CN" target="_blank" rel="noopener">zh</a><br>NodeJS: <a href="https://nodejs.org/" target="_blank" rel="noopener">en</a> | <a href="http://nodejs.cn/" target="_blank" rel="noopener">zh</a><br>w3schools: <a href="http://www.w3schools.com" target="_blank" rel="noopener">en</a> | <a href="http://www.w3school.com.cn" target="_blank" rel="noopener">zh</a><br>TypeScript: <a href="http://www.typescriptlang.org/" target="_blank" rel="noopener">en</a> | <a href="https://www.tslang.cn/" target="_blank" rel="noopener">zh</a><br>Redux: <a href="https://redux.js.org/" target="_blank" rel="noopener">en</a> | <a href="https://www.redux.org.cn/" target="_blank" rel="noopener">zh</a><br><a href="http://www.runoob.com" target="_blank" rel="noopener">菜鸟教程</a><br><a href="https://cloud.tencent.com/developer/devdocs" target="_blank" rel="noopener">腾讯云 - 开发者手册</a><br><a href="https://dwqs.gitbooks.io/frontenddevhandbook" target="_blank" rel="noopener">前端开发者手册</a>  </p><h5 id="在线代码测试"><a href="#在线代码测试" class="headerlink" title="在线代码测试"></a>在线代码测试</h5><p><a href="https://jsbin.com/" target="_blank" rel="noopener">Jsbin</a><br><a href="https://codepen.io" target="_blank" rel="noopener">Codepen</a><br><a href="https://jsfiddle.net/" target="_blank" rel="noopener">Jsfiddle</a><br><a href="https://codesandbox.io" target="_blank" rel="noopener">Codesandbox</a>  </p><h5 id="注释工具"><a href="#注释工具" class="headerlink" title="注释工具"></a>注释工具</h5><p>jsdoc: <a href="http://usejsdoc.org/" target="_blank" rel="noopener">en</a> | <a href="https://www.css88.com/doc/jsdoc/" target="_blank" rel="noopener">zh</a></p><h5 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h5><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo博客生成</a><br><a href="https://www.iconfont.cn/" target="_blank" rel="noopener">阿里字体图标</a><br><a href="http://fontstore.baidu.com/static/editor/index.html" target="_blank" rel="noopener">百度字体编辑器</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理了一些前端相关的资源, 包括前端框架、打包工具、技术手册、技术博客、问答社区、在线调试等&lt;br&gt;
    
    </summary>
    
      <category term="all" scheme="https://kscript.gitee.io/categories/all/"/>
    
    
      <category term="js" scheme="https://kscript.gitee.io/tags/js/"/>
    
      <category term="前端" scheme="https://kscript.gitee.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="导航" scheme="https://kscript.gitee.io/tags/%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>使用verdaccio搭建本地npm仓库</title>
    <link href="https://kscript.gitee.io/20181226/%E4%BD%BF%E7%94%A8verdaccio%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0npm%E4%BB%93%E5%BA%93.html"/>
    <id>https://kscript.gitee.io/20181226/使用verdaccio搭建本地npm仓库.html</id>
    <published>2018-12-26T10:23:10.000Z</published>
    <updated>2018-12-29T01:40:30.441Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在前端日益工程化的今天, 我们几乎每天都在和node, npm, webpack这些工具打交道.<br>它们极大地提升了我们的开发效率, 却也带来了不少的问题.<br>比如webpack的难配置, npm包的依赖地狱, 动不动就需要安装一堆依赖等…<br>今天记录一下 使用verdaccio搭建本地npm仓库 的办法, 解决npm依赖过重的问题.<br>关于webpack的配置, 如果有闲暇时间的话, 我准备再写一篇[从零配置一个webpack项目]的文章.</p><a id="more"></a><hr><h3 id="使用本地仓库的优势"><a href="#使用本地仓库的优势" class="headerlink" title="使用本地仓库的优势"></a>使用本地仓库的优势</h3><ol><li>减少重复安装</li><li>可以发布一些私有包</li></ol><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><ol><li>全局安装 verdaccio<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global verdaccio</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><ol><li><p>运行 verdaccio</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">verdaccio</span><br></pre></td></tr></table></figure></li><li><p>修改配置<br>在运行 verdaccio 命令时的输出信息里, 找到 config.yaml文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 本地仓库没有指定包时的上游仓库</span><br><span class="line">uplinks:</span><br><span class="line">  npmjs:</span><br><span class="line">    url: https://registry.npm.taobao.org/  </span><br><span class="line">// 文末添加监听端口</span><br><span class="line">listen: 0.0.0.0:4873</span><br></pre></td></tr></table></figure></li><li><p>设置仓库地址</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">set</span> registry http://localhost:<span class="number">4873</span>/</span><br></pre></td></tr></table></figure></li><li><p>添加账户</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm adduser admin --registry http://localhost:<span class="number">4873</span></span><br></pre></td></tr></table></figure></li><li><p>发布私有包</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish --registry http://localhost:<span class="number">4873</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="守护进程"><a href="#守护进程" class="headerlink" title="守护进程"></a>守护进程</h3><ol><li>试过一些教程中说的pm2, 可惜在windows系统中不太好用, 只好退而求次使用 开机启动 + vbs脚本打开一个隐藏的命令行 这种方法. 代码如下, 将其放入Startup文件夹即可.<br><strong>注意: 文件的名字不要是verdaccio.vbs, 会覆盖verdaccio命令</strong></li></ol><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// verda.vbs</span><br><span class="line"><span class="keyword">Set</span> ws = <span class="built_in">CreateObject</span>(<span class="string">"Wscript.Shell"</span>) </span><br><span class="line">ws.run <span class="string">"cmd /c verdaccio"</span>,vbhide</span><br></pre></td></tr></table></figure><p>嗯 .. 对于不会vbs的我来说, 这个进程很安全很安全.<br>话说, 这个进程除了删文件关电脑外, 还有什么办法可以很方便地关掉~</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在前端日益工程化的今天, 我们几乎每天都在和node, npm, webpack这些工具打交道.&lt;br&gt;它们极大地提升了我们的开发效率, 却也带来了不少的问题.&lt;br&gt;比如webpack的难配置, npm包的依赖地狱, 动不动就需要安装一堆依赖等…&lt;br&gt;今天记录一下 使用verdaccio搭建本地npm仓库 的办法, 解决npm依赖过重的问题.&lt;br&gt;关于webpack的配置, 如果有闲暇时间的话, 我准备再写一篇[从零配置一个webpack项目]的文章.&lt;/p&gt;
    
    </summary>
    
      <category term="npm" scheme="https://kscript.gitee.io/categories/npm/"/>
    
    
      <category term="npm" scheme="https://kscript.gitee.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>模拟new一个实例</title>
    <link href="https://kscript.gitee.io/20181226/%E6%A8%A1%E6%8B%9Fnew%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BE%8B.html"/>
    <id>https://kscript.gitee.io/20181226/模拟new一个实例.html</id>
    <published>2018-12-26T01:49:16.000Z</published>
    <updated>2018-12-29T01:41:09.249Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">newInstace</span> (<span class="params">func</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (func <span class="keyword">instanceof</span> <span class="built_in">Function</span>) &#123;</span><br><span class="line">    <span class="comment">// 基于函数原型创建一个对象</span></span><br><span class="line">    <span class="keyword">var</span> instace = <span class="built_in">Object</span>.create(func.prototype);</span><br><span class="line">    <span class="comment">// 修改函数的指向并调用</span></span><br><span class="line">    <span class="keyword">var</span> result = func.apply(instace, [].slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>));</span><br><span class="line">    <span class="comment">// 如果返回值是对象, 则返回这个对象, 否则返回前面创建的实例</span></span><br><span class="line">    <span class="keyword">return</span> result <span class="keyword">instanceof</span> <span class="built_in">Object</span> ? result : instace;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">throw</span> <span class="string">'第一个参数不是函数~'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    name: <span class="string">'c'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(newInstace(Person, <span class="string">'a'</span>)); <span class="comment">// Person&#123; name: "a" &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(newInstace(Cat, <span class="string">'b'</span>)); <span class="comment">// &#123; name: "c" &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实现方法&quot;&gt;&lt;a href=&quot;#实现方法&quot; class=&quot;headerlink&quot; title=&quot;实现方法&quot;&gt;&lt;/a&gt;实现方法&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;newInstace&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;func&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (func &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Function&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 基于函数原型创建一个对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instace = &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.create(func.prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 修改函数的指向并调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = func.apply(instace, [].slice.call(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 如果返回值是对象, 则返回这个对象, 否则返回前面创建的实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt; ? result : instace;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;第一个参数不是函数~&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="js" scheme="https://kscript.gitee.io/categories/js/"/>
    
    
      <category term="js" scheme="https://kscript.gitee.io/tags/js/"/>
    
      <category term="前端" scheme="https://kscript.gitee.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>合并远程提交记录</title>
    <link href="https://kscript.gitee.io/20181222/%E5%90%88%E5%B9%B6%E8%BF%9C%E7%A8%8B%E6%8F%90%E4%BA%A4%E8%AE%B0%E5%BD%95.html"/>
    <id>https://kscript.gitee.io/20181222/合并远程提交记录.html</id>
    <published>2018-12-22T09:57:44.000Z</published>
    <updated>2018-12-29T01:41:02.632Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-选择要操作的记录"><a href="#1-选择要操作的记录" class="headerlink" title="1. 选择要操作的记录"></a>1. 选择要操作的记录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 选择要合并记录的分支</span><br><span class="line">git checkout dev</span><br><span class="line">// 查看提交记录</span><br><span class="line">git log</span><br><span class="line"></span><br><span class="line">// 选取要操作的记录</span><br><span class="line">// -i 后面为一个区间, 它可以是:</span><br><span class="line">// 1. 提交记录的hash, 表示选择该记录(不含), 到 最新提交 这个区间</span><br><span class="line">// 2. N ~ N1 区间</span><br><span class="line">git rebase -i  [startpoint]  [endpoint]</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="2-选择完-进入vim模式"><a href="#2-选择完-进入vim模式" class="headerlink" title="2. 选择完, 进入vim模式"></a>2. 选择完, 进入vim模式</h4><p>首先, 使用 insert 键切换到编辑模式</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 编辑前显示的文本</span><br><span class="line">pick [hash1] [commit]</span><br><span class="line">pick [hash2] [commit]</span><br><span class="line">pick [hash3] [commit]</span><br><span class="line"></span><br><span class="line">// pick 合并后保留的 commit</span><br><span class="line">pick [hash1] [commit]</span><br><span class="line">// 改为s, 意为合并到 pick 里</span><br><span class="line">s [hash2] [commit]</span><br><span class="line">s [hash3] [commit]</span><br></pre></td></tr></table></figure><p>编辑完毕, 按ESC键, 进入命令模式<br>| 命令 | 说明 |<br>–|–<br>| :w | 写入<br>| :q | 退出, 如果内容有修改, 会提示错误<br>| :q! | 不保存, 强制退出<br>| :wq | 写入并退出<br>| :wq! | 强制写入并退出<br>| :e! | 放弃所有修改，从上次保存文件开始再编辑<br>上面列举了用到的部分命令, 更多命令自己搜…</p><h4 id="3-合并"><a href="#3-合并" class="headerlink" title="3. 合并"></a>3. 合并</h4><p>退出vim模式后, git 会对选择的提交记录进行合并,</p><p>如果合并时有冲突, 需要修改, 修改以后使用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git rebase --continue</span><br></pre></td></tr></table></figure></p><p>你也可以放弃合并<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 放弃合并</span><br><span class="line">git rebase --abort</span><br></pre></td></tr></table></figure></p><h4 id="4-提交"><a href="#4-提交" class="headerlink" title="4. 提交"></a>4. 提交</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 强制提交到dev分支</span><br><span class="line">git push -f origin dev</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-选择要操作的记录&quot;&gt;&lt;a href=&quot;#1-选择要操作的记录&quot; class=&quot;headerlink&quot; title=&quot;1. 选择要操作的记录&quot;&gt;&lt;/a&gt;1. 选择要操作的记录&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 选择要合并记录的分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 查看提交记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 选取要操作的记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// -i 后面为一个区间, 它可以是:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 1. 提交记录的hash, 表示选择该记录(不含), 到 最新提交 这个区间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 2. N ~ N1 区间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git rebase -i  [startpoint]  [endpoint]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="git" scheme="https://kscript.gitee.io/categories/git/"/>
    
    
      <category term="git" scheme="https://kscript.gitee.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>合并分支</title>
    <link href="https://kscript.gitee.io/20181222/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF.html"/>
    <id>https://kscript.gitee.io/20181222/合并分支.html</id>
    <published>2018-12-22T03:41:42.000Z</published>
    <updated>2018-12-29T01:40:58.598Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 在dev分支内进行开发</span><br><span class="line">git checkout dev</span><br><span class="line">git add .</span><br><span class="line">git commit -m &apos;N次提交代码到dev&apos;</span><br><span class="line">git push -u origin dev</span><br><span class="line"></span><br><span class="line">// 在dev分支完成某些任务后切换到master分支</span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line">git merge --squash dev</span><br><span class="line">git commit -m &apos;描述下合并过来的这些代码都做了什么&apos;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 在dev分支内进行开发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &amp;apos;N次提交代码到dev&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push -u origin dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 在dev分支完成某些任务后切换到master分支&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git merge --squash dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &amp;apos;描述下合并过来的这些代码都做了什么&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="git" scheme="https://kscript.gitee.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo踩坑记录</title>
    <link href="https://kscript.gitee.io/20181221/hexo%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95.html"/>
    <id>https://kscript.gitee.io/20181221/hexo踩坑记录.html</id>
    <published>2018-12-21T06:50:43.000Z</published>
    <updated>2018-12-29T01:40:23.632Z</updated>
    
    <content type="html"><![CDATA[<h4 id="开发文档"><a href="#开发文档" class="headerlink" title="开发文档"></a>开发文档</h4><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo中文文档</a></p><a id="more"></a><h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><ol><li><p>全局安装Hexo-cli</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>使用 Hexo-cli 创建Hexo项目</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>配置站点<br>项目根目录下找到 _config.yml 文件, 按照文档给的说明修改</p></li></ol><h4 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h4><ol><li>新增文章<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure></li></ol><p>如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。<br>如果标题包含空格的话，请使用引号括起来。<br>新增的文章, 可以在 source_posts\ 文件夹里找到。打开文章md, 文件最上边的两个 <code>---</code> 放置的是文章的一些信息, 写正文的话另起一行即可</p><ol start="2"><li>生成<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></li></ol><h4 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h4><p>开启本地服务<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></p><h4 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h4><ol><li><p>使用 git 部署的话, 首先要安装 hexo-deployer-git</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>安装完毕, 修改配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br><span class="line">  message: [message]</span><br></pre></td></tr></table></figure></li></ol><p>如果习惯于git的话, message可以不用写, 每次提交部署的时候写上</p><ol start="3"><li>提交部署<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 这里的写法与 git commit 一致, 也可以到_config.yml中去配</span><br><span class="line">hexo deploy -m message</span><br></pre></td></tr></table></figure></li></ol><h4 id="个性配置"><a href="#个性配置" class="headerlink" title="个性配置"></a>个性配置</h4><p>Hexo默认的主题, 会在首页显示文章的全文, 这个问题可以使用 <a href="https://blog.csdn.net/lewky_liu/article/details/81277337" target="_blank" rel="noopener">站点首页不显示文章全文</a> 这篇博文提到的办法解决</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;开发文档&quot;&gt;&lt;a href=&quot;#开发文档&quot; class=&quot;headerlink&quot; title=&quot;开发文档&quot;&gt;&lt;/a&gt;开发文档&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo中文文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://kscript.gitee.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://kscript.gitee.io/tags/hexo/"/>
    
      <category term="博客" scheme="https://kscript.gitee.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>git生成SSHkey</title>
    <link href="https://kscript.gitee.io/20181221/git%E7%94%9F%E6%88%90SSHkey.html"/>
    <id>https://kscript.gitee.io/20181221/git生成SSHkey.html</id>
    <published>2018-12-21T06:21:03.000Z</published>
    <updated>2018-12-29T01:40:16.410Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-配置全局-name-和-email"><a href="#1-配置全局-name-和-email" class="headerlink" title="1. 配置全局 name 和 email"></a>1. 配置全局 name 和 email</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;your_account&quot;</span><br><span class="line">git config –-global user.email your_email@example.com</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="2-生成-SSH-Key"><a href="#2-生成-SSH-Key" class="headerlink" title="2. 生成 SSH Key"></a>2. 生成 SSH Key</h4><p>将以下命令中的邮箱改为自己的邮箱后, 执行命令, 然后连续按回车键三次<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C your_email@example.com</span><br></pre></td></tr></table></figure></p><h4 id="3-查看生成的-SSH-Key"><a href="#3-查看生成的-SSH-Key" class="headerlink" title="3. 查看生成的 SSH Key"></a>3. 查看生成的 SSH Key</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h4 id="4-添加-SSH-Key-到-github-配置"><a href="#4-添加-SSH-Key-到-github-配置" class="headerlink" title="4. 添加 SSH Key 到 github 配置"></a>4. 添加 SSH Key 到 github 配置</h4><p>使用第3步的命令, 或者打开 C:\Users\Administrator\.ssh\id_rsa.pub 文件来获取 SSH Key,<br>然后打开 <a href="https://github.com/settings/ssh/new" target="_blank" rel="noopener">添加 SSH Key</a> 页面, 自定义一个 title, 并将 SSH Key 粘贴到 Key 输入框, 最后点击 Add</p><h4 id="5-测试-SSH-Key"><a href="#5-测试-SSH-Key" class="headerlink" title="5. 测试 SSH Key"></a>5. 测试 SSH Key</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-配置全局-name-和-email&quot;&gt;&lt;a href=&quot;#1-配置全局-name-和-email&quot; class=&quot;headerlink&quot; title=&quot;1. 配置全局 name 和 email&quot;&gt;&lt;/a&gt;1. 配置全局 name 和 email&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &amp;quot;your_account&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config –-global user.email your_email@example.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="git" scheme="https://kscript.gitee.io/categories/git/"/>
    
    
      <category term="git" scheme="https://kscript.gitee.io/tags/git/"/>
    
      <category term="sshkey" scheme="https://kscript.gitee.io/tags/sshkey/"/>
    
      <category term="版本控制" scheme="https://kscript.gitee.io/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
</feed>
